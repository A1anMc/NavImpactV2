from typing import List
from datetime import datetime, timedelta
import random
from sqlalchemy.orm import Session

from app.models.grant import Grant
from app.services.scrapers.base_scraper import BaseScraper

class DummyScraper(BaseScraper):
    """Dummy scraper for testing and development."""
    
    def __init__(self, db: Session):
        super().__init__(db)
        self.source_name = "dummy"
    
    def scrape(self) -> List[Grant]:
        """Generate dummy grant data for testing."""
        grants = []
        num_grants = random.randint(3, 7)
        
        for i in range(num_grants):
            # Simulate network delay
            self._random_delay()
            
            # Generate random dates
            start_date = datetime.now() + timedelta(days=random.randint(1, 30))
            end_date = start_date + timedelta(days=random.randint(30, 90))
            
            # Create dummy grant
            grant = Grant(
                title=f"Test Grant {i + 1}",
                description=f"This is a test grant generated by the dummy scraper (#{i + 1})",
                source=self.source_name,
                source_url=f"https://example.com/grants/{i + 1}",
                amount_min=random.randint(1000, 5000),
                amount_max=random.randint(5000, 50000),
                start_date=start_date,
                end_date=end_date,
                status="open",
                eligibility_criteria=["Test criteria 1", "Test criteria 2"],
                industry_focus=["Technology", "Arts"],
                location_eligibility=["National"],
                org_type=["Not for Profit", "Small Business"]
            )
            
            # Add to list
            grants.append(grant)
            
            # Track URL for logging
            self.urls_scraped.append(grant.source_url)
        
        return grants 