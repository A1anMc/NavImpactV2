"""update_grant_schema_for_sqlite

Revision ID: dff4b2da4299
Revises: 229176025b48
Create Date: 2025-07-08 15:53:38.961237

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision: str = 'dff4b2da4299'
down_revision: Union[str, None] = '229176025b48'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE', name='fk_metric_project_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('metric', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_metric_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_metric_name'), ['name'], unique=False)

    op.create_table('team_member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE', name='fk_team_member_project_id'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE', name='fk_team_member_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('team_member', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_team_member_id'), ['id'], unique=False)

    with op.batch_alter_table('grants', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=text('CURRENT_TIMESTAMP'),
               existing_nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               server_default=text('CURRENT_TIMESTAMP'),
               existing_nullable=False)
        batch_op.alter_column('industry_focus',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('location_eligibility',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_grants_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_grants_industry_focus'), ['industry_focus'], unique=False)
        batch_op.create_index(batch_op.f('ix_grants_location_eligibility'), ['location_eligibility'], unique=False)
        batch_op.create_index(batch_op.f('ix_grants_open_date'), ['open_date'], unique=False)
        batch_op.drop_column('url')
        batch_op.drop_column('amount')

    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.drop_index('ix_project_status')
        batch_op.create_index(batch_op.f('ix_project_id'), ['id'], unique=False)

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               nullable=True)
        batch_op.create_index(batch_op.f('ix_tags_id'), ['id'], unique=False)

    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.add_column(sa.Column('estimated_hours', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('actual_hours', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('completed_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('project_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('creator_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('assignee_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('tags', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('attachments', sa.JSON(), nullable=True))
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_task_id'), ['id'], unique=False)
        batch_op.drop_constraint('fk_task_assigned_to_id_user', type_='foreignkey')
        batch_op.drop_constraint('fk_task_created_by_id_user', type_='foreignkey')
        batch_op.create_foreign_key('fk_task_creator_id_user', 'user', ['creator_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_task_assignee_id_user', 'user', ['assignee_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_task_project_id', 'project', ['project_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('assigned_to_id')

    with op.batch_alter_table('task_comment', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_task_comment_id'), ['id'], unique=False)

    with op.batch_alter_table('time_entry', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               nullable=True)
        batch_op.create_index(batch_op.f('ix_time_entry_id'), ['id'], unique=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('is_superuser',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.alter_column('is_superuser',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)

    with op.batch_alter_table('time_entry', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_time_entry_id'))
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               nullable=False)

    with op.batch_alter_table('task_comment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task_comment_id'))
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False)

    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.add_column(sa.Column('assigned_to_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint('fk_task_project_id', type_='foreignkey')
        batch_op.drop_constraint('fk_task_assignee_id_user', type_='foreignkey')
        batch_op.drop_constraint('fk_task_creator_id_user', type_='foreignkey')
        batch_op.create_foreign_key('fk_task_created_by_id_user', 'user', ['created_by_id'], ['id'])
        batch_op.create_foreign_key('fk_task_assigned_to_id_user', 'user', ['assigned_to_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_task_id'))
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.drop_column('attachments')
        batch_op.drop_column('tags')
        batch_op.drop_column('assignee_id')
        batch_op.drop_column('creator_id')
        batch_op.drop_column('project_id')
        batch_op.drop_column('completed_at')
        batch_op.drop_column('actual_hours')
        batch_op.drop_column('estimated_hours')

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tags_id'))
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               nullable=False)

    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_id'))
        batch_op.create_index('ix_project_status', ['status'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('grants', schema=None) as batch_op:
        batch_op.add_column(sa.Column('amount', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('url', sa.String(length=1000), nullable=True))
        batch_op.drop_index(batch_op.f('ix_grants_open_date'))
        batch_op.drop_index(batch_op.f('ix_grants_location_eligibility'))
        batch_op.drop_index(batch_op.f('ix_grants_industry_focus'))
        batch_op.drop_index(batch_op.f('ix_grants_id'))
        batch_op.alter_column('location_eligibility',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('industry_focus',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)

    with op.batch_alter_table('team_member', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_team_member_id'))

    op.drop_table('team_member')

    with op.batch_alter_table('metric', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_metric_name'))
        batch_op.drop_index(batch_op.f('ix_metric_id'))

    op.drop_table('metric')
    # ### end Alembic commands ###
