"""add_user_profiles_table

Revision ID: 1a8c49ee21e4
Revises: 78a037b8fda0
Create Date: 2025-07-22 16:09:44.907827

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '1a8c49ee21e4'
down_revision: Union[str, None] = '78a037b8fda0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('organization_name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('organization_type', sa.VARCHAR(length=100), nullable=False),
    sa.Column('industry_focus', sa.VARCHAR(length=100), nullable=True),
    sa.Column('location', sa.VARCHAR(length=100), nullable=True),
    sa.Column('website', sa.VARCHAR(length=500), nullable=True),
    sa.Column('description', sa.VARCHAR(length=1000), nullable=True),
    sa.Column('preferred_funding_range_min', sa.INTEGER(), nullable=True),
    sa.Column('preferred_funding_range_max', sa.INTEGER(), nullable=True),
    sa.Column('preferred_industries', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('preferred_locations', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('preferred_org_types', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('max_deadline_days', sa.INTEGER(), nullable=True),
    sa.Column('min_grant_amount', sa.INTEGER(), nullable=True),
    sa.Column('max_grant_amount', sa.INTEGER(), nullable=True),
    sa.Column('email_notifications', sa.VARCHAR(length=50), nullable=True),
    sa.Column('deadline_alerts', sa.INTEGER(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_profiles_user_id_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='user_profiles_pkey')
    )
    op.create_index('ix_user_profiles_id', 'user_profiles', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_profiles_id', table_name='user_profiles')
    op.drop_table('user_profiles')
    # ### end Alembic commands ###
