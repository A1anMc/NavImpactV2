services:
  # Backend API Service
  - type: web
    name: sge-dashboard-api
    env: python
    buildCommand: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: |
      alembic upgrade head
      gunicorn app.main:app \
        --workers 1 \
        --worker-class uvicorn.workers.UvicornWorker \
        --bind 0.0.0.0:$PORT \
        --timeout 120 \
        --keep-alive 65 \
        --log-level info \
        --error-logfile - \
        --access-logfile - \
        --capture-output
    envVars:
      - key: DATABASE_URL
        sync: false  # Will be set manually to Supabase URL
      - key: SECRET_KEY
        generateValue: true
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_SERVICE_ROLE_KEY
        sync: false
      - key: SUPABASE_ANON_KEY
        sync: false
      - key: SUPABASE_JWT_SECRET
        sync: false
      - key: DEBUG
        value: "false"  # Disable debug in production
      - key: LOG_LEVEL
        value: "INFO"  # Use INFO level for production
      - key: PYTHONUNBUFFERED
        value: "1"  # Ensure Python output is not buffered
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_POOL_SIZE
        value: "1"  # Match worker count
      - key: DATABASE_MAX_OVERFLOW
        value: "2"  # Keep low for stability
      - key: DATABASE_POOL_TIMEOUT
        value: "30"
      - key: DATABASE_POOL_RECYCLE
        value: "1800"  # 30 minutes
      - key: DATABASE_MAX_RETRIES
        value: "3"
      - key: DATABASE_RETRY_DELAY
        value: "2"
      - key: DATABASE_ECHO
        value: "false"  # Disable SQL logging in production
      - key: CORS_ORIGINS
        value: '["https://sge-dashboard-web.onrender.com"]'
    healthCheckPath: /health
    autoDeploy: false  # Require manual deployment approval
    scaling:
      minInstances: 1
      maxInstances: 1
      targetMemoryPercent: 70
      targetCPUPercent: 70
    
  # Frontend Service
  - type: web
    name: sge-dashboard-frontend
    env: node
    buildCommand: |
      cd frontend
      npm install
      npm run build
    startCommand: cd frontend && npm start
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: https://sge-dashboard-api.onrender.com
      - key: NODE_ENV
        value: production
      - key: NEXT_PUBLIC_ENABLE_ANALYTICS
        value: "false"
      - key: NEXT_PUBLIC_DEBUG_MODE
        value: "false"
    autoDeploy: false  # Require manual deployment approval
    headers:
      - path: /*
        name: Content-Security-Policy
        value: "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' https://*.onrender.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' https://sge-dashboard-api.onrender.com https://*.onrender.com wss://*.onrender.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; object-src 'none'; worker-src 'self' blob:;"

# Global environment restrictions
envVarGroups:
  - name: production
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_ECHO
        value: "false"
      - key: DEBUG
        value: "false" 