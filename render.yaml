services:
  # Backend API Service
  - type: web
    name: sge-dashboard-api
    env: python
    buildCommand: |
      pip install -r requirements.txt
    startCommand: |
      gunicorn app.main:app --bind 0.0.0.0:$PORT --workers 2
    envVars:
      # Core Environment
      - key: RENDER
        value: "true"
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: "false"
      - key: LOG_LEVEL
        value: "INFO"
      - key: PYTHONUNBUFFERED
        value: "1"
      
      # Database Configuration
      - key: DATABASE_URL
        sync: false  # Set this manually in the dashboard
      
      # Security - Generated or set manually
      - key: SECRET_KEY
        sync: false
      - key: JWT_SECRET_KEY
        generateValue: true
      
      # CORS Configuration
      - key: FRONTEND_URL
        value: "https://sge-dashboard-web.onrender.com"
      - key: CORS_ORIGINS
        value: '["https://sge-dashboard-web.onrender.com", "https://sge-dashboard-api.onrender.com", "https://*.onrender.com"]'
      
    healthCheckPath: /health
    autoDeploy: true
    scaling:
      minInstances: 1
      maxInstances: 2
      targetMemoryPercent: 70
      targetCPUPercent: 70
    
  # Frontend Service
  - type: web
    name: sge-dashboard-web
    env: node
    buildCommand: |
      cd frontend
      npm ci --only=production
      npm run build
      # ✅ Copy static assets into standalone
      mkdir -p .next/standalone/.next
      cp -r .next/static .next/standalone/.next/
      # ✅ Copy public assets
      cp -r public .next/standalone/public || true
    startCommand: |
      cd frontend/.next/standalone && node server.js
    envVars:
      # Backend API URL
      - key: NEXT_PUBLIC_API_URL
        value: "https://sge-dashboard-api.onrender.com"
      
      # Environment
      - key: NODE_ENV
        value: production
      - key: NEXT_PUBLIC_ENV
        value: production
      
      # Port configuration
      - key: PORT
        value: "3000"
      
      # Security Settings
      - key: NEXT_PUBLIC_ENABLE_ANALYTICS
        value: "false"
      - key: NEXT_PUBLIC_DEBUG_MODE
        value: "false"
    
    healthCheckPath: /
    autoDeploy: true
    scaling:
      minInstances: 1
      maxInstances: 2
      targetMemoryPercent: 70
      targetCPUPercent: 70
    
    # Security Headers (additional layer)
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: Referrer-Policy
        value: strict-origin-when-cross-origin
      - path: /*
        name: Strict-Transport-Security
        value: max-age=31536000; includeSubDomains; preload
      - path: /*
        name: Permissions-Policy
        value: camera=(), microphone=(), geolocation=(), payment=()

# Environment Groups for organized configuration
envVarGroups:
  - name: production-security
    envVars:
      - key: NODE_ENV
        value: production
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: "false"
      - key: DATABASE_ECHO
        value: "false"
      - key: RATE_LIMIT_ENABLED
        value: "true" 