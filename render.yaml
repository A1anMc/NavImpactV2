services:
  # Backend API Service
  - type: web
    name: sge-dashboard-api
    env: python
    pythonVersion: "3.11.9"
    buildCommand: |
      pip install --upgrade pip
      pip install --no-cache-dir --only-binary=:all: --prefer-binary -r requirements.txt
    startCommand: |
      echo "Starting backend deployment..."
      echo "Database URL: $DATABASE_URL"
      echo "Skipping migrations - database already initialized"
      gunicorn app.main:app --bind 0.0.0.0:$PORT --workers 2 --worker-class uvicorn.workers.UvicornWorker --timeout 300 --preload
    envVars:
      - key: PYTHON_VERSION
        value: "3.11.9"
      - key: DATABASE_URL
        fromDatabase:
          name: sge-dashboard-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: ENVIRONMENT
        value: production
      - key: CORS_ORIGINS
        value: "https://sge-dashboard-web.onrender.com,https://sge-dashboard-web-new.onrender.com"
      - key: ALLOWED_HOSTS
        value: "sge-dashboard-api.onrender.com,localhost,127.0.0.1"
      - key: LOG_LEVEL
        value: INFO
      - key: EMAIL_ENABLED
        value: "false"
      - key: RATE_LIMIT_ENABLED
        value: "true"
      - key: MAX_REQUESTS_PER_MINUTE
        value: "60"
      - key: DATABASE_POOL_SIZE
        value: "10"
      - key: DATABASE_MAX_OVERFLOW
        value: "20"
      - key: DATABASE_POOL_TIMEOUT
        value: "30"
      - key: DATABASE_POOL_RECYCLE
        value: "3600"

  # Frontend Service
  - type: web
    name: sge-dashboard-web
    env: node
    nodeVersion: "20.x"
    buildCommand: |
      cd frontend
      npm ci --only=production
      npm run build
    startCommand: |
      cd frontend
      npm start
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: https://sge-dashboard-api.onrender.com
      - key: NODE_ENV
        value: production
      - key: NEXT_TELEMETRY_DISABLED
        value: "1"

databases:
  - name: sge-dashboard-db
    databaseName: sge_dashboard
    user: sge_dashboard_user 