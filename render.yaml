services:
  # Backend API Service
  - type: web
    name: sge-dashboard-api
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn app.main:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: sge-dashboard-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_SERVICE_ROLE_KEY
        sync: false
      - key: SUPABASE_ANON_KEY
        sync: false
      - key: SUPABASE_JWT_SECRET
        sync: false
      - key: DEBUG
        value: false
      - key: LOG_LEVEL
        value: INFO
    healthCheckPath: /health
    autoDeploy: false  # Require manual deployment approval
    
  # Frontend Service
  - type: web
    name: sge-dashboard-frontend
    env: node
    buildCommand: cd frontend && npm install && npm run build
    startCommand: cd frontend && npm start
    envVars:
      - key: NEXT_PUBLIC_API_URL
        fromService:
          name: sge-dashboard-api
          type: web
          property: url
      - key: NEXT_PUBLIC_ENABLE_ANALYTICS
        value: false
      - key: NEXT_PUBLIC_DEBUG_MODE
        value: false
    autoDeploy: false  # Require manual deployment approval

databases:
  # Enforce PostgreSQL Usage
  - name: sge-dashboard-db
    type: postgres
    ipAllowList: []  # Restrict access to Render services only
    plan: standard  # Specify the plan explicitly

# Global environment restrictions
envVarGroups:
  - name: production
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_ECHO
        value: false
      - key: DEBUG
        value: false 